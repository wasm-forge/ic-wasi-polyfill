name: Tests

on:
  [push]

env:
  CARGO_TERM_COLOR: always
  TERM: xterm-256color

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.88.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-cargo-

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup component add rustfmt
          rustup component add clippy
          rustup target add wasm32-wasip1

      - name: Install dfx
        uses: dfinity/setup-dfx@main
            
      - name: Check Format
        run: cargo fmt --all -- --check

      #- name: Clippy
      #  run: cargo clippy --tests --benches -- -D clippy::all

      - name: Install wasi2ic
        run: cargo install wasi2ic

      - name: Install candid-extractor
        run: cargo install candid-extractor

      # Build everything
      - name: Build test projects
        run: ./scripts/build_tests.sh

      # Run tests
      - name: Run tests
        run: cargo test -- --color always

      # Prepare coverage
      - name: Install llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --features report_wasi_calls,transient --lcov --show --ignore-filename-regex='(wasi_mock\.rs|^fuzz\-tests)' --workspace --output-path lcov.info

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
