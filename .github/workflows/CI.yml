name: Tests

on:
  [push]

env:
  CARGO_TERM_COLOR: always

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Check Format
        run: cargo fmt --all -- --check

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}        

      - name: Clippy
        run: cargo clippy --tests --benches -- -D clippy::all

  build:
    runs-on: ubuntu-latest
    needs: format

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-wasip1
        profile: minimal
        override: true

    - name: Cache Rust
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}        

    - name: Install wasi2ic
      run: cargo install wasi2ic

    - name: Build test projects
      run: ./scripts/build_tests.sh

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: target-dir
        path: target/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasip1
          profile: minimal
          override: true

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}        

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-dir
          path: target/
      
      - name: Current folder
        run: echo $PWD

      - name: Run tests
        run: cargo test --verbose

  coverage:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v4

        - uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            target: wasm32-wasip1
            profile: minimal
            override: true


        - name: Cache Rust
          uses: actions/cache@v4
          with:
            path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index/
              ~/.cargo/registry/cache/
              ~/.cargo/git/db/
              target/
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}        

        - uses: actions/download-artifact@v4
          with:
            name: target-dir
            path: target/

        - uses: taiki-e/install-action@cargo-llvm-cov

        - name: Generate code coverage
          run: cargo llvm-cov --features report_wasi_calls,transient --ignore-filename-regex=wasi_mock.rs --workspace --lcov --output-path lcov.info

        - uses: codecov/codecov-action@v3
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: lcov.info
            fail_ci_if_error: true

